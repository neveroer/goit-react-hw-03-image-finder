{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.js","services/api.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","query","reset","setState","onFormSubmit","event","preventDefault","trim","props","onSubmit","toast","error","onInpChange","currentTarget","value","toLowerCase","className","s","this","SearchForm","type","SearchFormBtn","SearchFormBtnLabel","onChange","SearchFormInput","autoComplete","autoFocus","placeholder","Component","fetchImages","page","searchParams","URLSearchParams","q","per_page","key","fetch","then","response","ok","json","Promise","reject","Error","ImageGalleryItem","src","alt","largeImageUrl","styles","data-large-url","ImageGalleryItemImage","ImageGallery","onClick","imageList","map","index","webformatURL","largeImageURL","Button","modalRoot","document","querySelector","Modal","isImageLoading","handleKeyDown","e","code","onClose","handleBackdropClick","target","onImageLoad","window","addEventListener","removeEventListener","createPortal","Overlay","color","height","width","onLoad","children","Status","App","status","showModal","currentImgObj","largeUrl","handleFormSubmit","resetPage","handleButtonClick","nextQuery","fetchProcessing","fetchImg","data","hits","length","prevState","catch","message","finally","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","handleGalleryItemClick","dataset","nodeName","prevProps","prevQuery","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.089325d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__38uPp\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3SlF8\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__5PmlM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2HH1U\",\"Modal\":\"Modal_Modal__20CRU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2wh8v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__bl9x3\"};","// Компонент принимает один проп onSubmit - функцию для передачи значения инпута при сабмите формы.\r\n// Создает DOM - элемент следующей структуры.\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\nimport s from './Searchbar.module.css';\r\n\r\nexport default class Searchbar extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  onFormSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.query.trim() === '') {\r\n      toast.error('write smth');\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(this.state.query);\r\n    this.reset();\r\n  };\r\n\r\n  onInpChange = event => {\r\n    this.setState({ query: event.currentTarget.value.toLowerCase() });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className={s.Searchbar}>\r\n        <form onSubmit={this.onFormSubmit} className={s.SearchForm}>\r\n          <button type=\"submit\" className={s.SearchFormBtn}>\r\n            <span className={s.SearchFormBtnLabel}>Search</span>\r\n          </button>\r\n          <input\r\n            onChange={this.onInpChange}\r\n            className={s.SearchFormInput}\r\n            value={this.state.query}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","const API_KEY = '20710753-e9f2c037f579edfcd595b7386';\r\nconst BASE_URL =\r\n  'https://pixabay.com/api/?image_type=photo&orientation=horizontal&';\r\n\r\nexport default function fetchImages(query, page) {\r\n  const searchParams = new URLSearchParams({\r\n    q: query,\r\n    page,\r\n    per_page: 12,\r\n    key: API_KEY,\r\n  });\r\n  return fetch(`${BASE_URL}${searchParams}`).then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n\r\n    return Promise.reject(\r\n      new Error(`There are no images for your query: ${query}`),\r\n    );\r\n  });\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport styles from './ImageGalleryItem.module.css';\r\n\r\nexport default function ImageGalleryItem({ src, alt, largeImageUrl }) {\r\n  return (\r\n    <li className={styles.ImageGalleryItem}>\r\n      <img\r\n        src={src}\r\n        alt={alt}\r\n        data-large-url={largeImageUrl}\r\n        className={styles.ImageGalleryItemImage}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = PropTypes.shape({\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  largeImageUrl: PropTypes.string.isRequired,\r\n}).isRequired;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ImageGallery.module.css';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n\r\nexport default class ImageGallery extends Component {\r\n  static propTypes = PropTypes.shape({\r\n    imageList: PropTypes.array.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n  }).isRequired;\r\n\r\n  render() {\r\n    const { onClick, imageList } = this.props;\r\n    return (\r\n      <ul className={styles.ImageGallery} onClick={onClick}>\r\n        {imageList.map(({ webformatURL, type, largeImageURL }, index) => (\r\n          <ImageGalleryItem\r\n            key={index}\r\n            src={webformatURL}\r\n            alt={type}\r\n            largeImageUrl={largeImageURL}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Button.module.css';\r\n\r\nexport default function Button({ onClick }) {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className={styles.Button}\r\n      onClick={() => {\r\n        onClick();\r\n      }}\r\n    >\r\n      Load more...\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import { createPortal } from 'react-dom';\r\nimport { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport styles from './Modal.module.css';\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  static propTypes = PropTypes.shape({\r\n    src: PropTypes.string,\r\n    alt: PropTypes.string,\r\n    onClose: PropTypes.func,\r\n    children: PropTypes.element,\r\n  }).isRequired;\r\n\r\n  state = {\r\n    isImageLoading: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n      this.setState({ isImageLoading: true });\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n      this.setState({ isImageLoading: true });\r\n    }\r\n  };\r\n\r\n  onImageLoad = () => {\r\n    this.setState({ isImageLoading: false });\r\n  };\r\n\r\n  render() {\r\n    const { src, alt } = this.props;\r\n    return createPortal(\r\n      <div className={styles.Overlay} onClick={this.handleBackdropClick}>\r\n        <div className={styles.Modal}>\r\n          {this.state.isImageLoading && (\r\n            <Loader\r\n              className=\"loader\"\r\n              type=\"ThreeDots\"\r\n              color=\"#3f51b5\"\r\n              height={100}\r\n              width={100}\r\n            />\r\n          )}\r\n          <img src={src} alt={alt} onLoad={this.onImageLoad} />\r\n          {this.props.children}\r\n        </div>\r\n      </div>,\r\n\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport Searchbar from './components/Searchbar';\nimport fetchImg from './services/api';\nimport Loader from 'react-loader-spinner';\nimport { ToastContainer, toast } from 'react-toastify';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nclass App extends Component {\n  state = {\n    query: '',\n    page: 1,\n    imageList: [],\n    error: '',\n    status: Status.IDLE,\n    showModal: false,\n    currentImgObj: { largeUrl: '', alt: '' },\n  };\n\n  //\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.query;\n    const nextQuery = this.state.query;\n\n    if (prevQuery !== nextQuery) {\n      this.setState({\n        imageList: [],\n        status: Status.PENDING,\n      });\n      this.fetchProcessing(nextQuery);\n    }\n  }\n\n  handleFormSubmit = query => {\n    this.setState({ query });\n    this.resetPage();\n  };\n\n  handleButtonClick = () => {\n    const nextQuery = this.state.query;\n    this.setState({ status: Status.PENDING });\n    this.fetchProcessing(nextQuery);\n  };\n\n  fetchProcessing = nextQuery => {\n    fetchImg(nextQuery, this.state.page)\n      .then(data => {\n        if (data.hits.length === 0) {\n          this.setState({ status: Status.IDLE });\n          return toast.error('Unfortunately, there is nothing to show...');\n        }\n        this.setState(prevState => ({\n          imageList: [...prevState.imageList, ...data.hits],\n          status: Status.RESOLVED,\n        }));\n      })\n      .catch(({ message }) =>\n        this.setState({ error: message, status: Status.REJECTED }),\n      )\n      .finally(() => {\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n        this.setState(prevState => ({ page: (prevState.page += 1) }));\n      });\n  };\n\n  //\n\n  onFormSubmit = query => {\n    this.setState({ query });\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  handleGalleryItemClick = e => {\n    const largeUrl = e.target.dataset.largeUrl;\n    const alt = e.target.alt;\n    if (e.target.nodeName === 'IMG') {\n      this.setState({ currentImgObj: { largeUrl, alt } });\n    }\n    this.toggleModal();\n  };\n  render() {\n    const { imageList, error, status, showModal, currentImgObj } = this.state;\n    return (\n      <>\n        <Searchbar onSubmit={this.onFormSubmit} />\n        {error && <h1>{error}</h1>}\n        <ImageGallery\n          imageList={imageList}\n          onClick={this.handleGalleryItemClick}\n        />\n        {showModal && (\n          <Modal\n            src={currentImgObj.largeUrl}\n            alt={currentImgObj.alt}\n            onClose={this.toggleModal}\n          ></Modal>\n        )}\n        <div className=\"container\">\n          {status === Status.PENDING && (\n            <Loader\n              className=\"loader\"\n              type=\"ThreeDots\"\n              color=\"#3f51b5\"\n              height={100}\n              width={100}\n            />\n          )}\n          {status === Status.RESOLVED && (\n            <Button onClick={this.handleButtonClick} />\n          )}\n        </div>\n\n        <ToastContainer autoClose={2000} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1m4uM\",\"SearchForm\":\"Searchbar_SearchForm__1id4t\",\"SearchFormBtn\":\"Searchbar_SearchFormBtn__1VlWR\",\"SearchFormBtnLabel\":\"Searchbar_SearchFormBtnLabel__21g7f\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3PTTU\"};"],"sourceRoot":""}